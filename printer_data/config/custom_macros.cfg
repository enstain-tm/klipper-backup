[pause_resume]
recover_velocity: 700

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x|float %}
  {% set y_park = printer.toolhead.axis_maximum.y|float %}
  {% set z_park_delta = 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M117 Filament wird ausgeworfen
  G91
  G92 E0
  G1  E15 F240
  G92 E0
  G1  E-10 F2100
  G92 E0
  G1  E-25 F1800
  G92 E0
  G1  E-400 F1000
  G90

[gcode_macro LOAD_FILAMENT]
gcode:
  M117 Filament wird geladen
  G91
  G92 E0
  G1  E400 F1000
  G92 E0
  G1  E100 F750
  G92 E0
  G1  E100 F250
  G92 E0
  G90


#SET_IDLE_TIMEOUT TIMEOUT=1800


# Idle timeout. An idle timeout is automatically enabled - add an
# explicit idle_timeout config section to change the default settings.

# Adds a check to see if the printer should shutdown on idle 

[idle_timeout]
gcode:
    #{action_respond_info("Timeout, X Y E disabled")}
    
    {action_respond_info("Timeout, Extruder Heater Disabled")}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0

    #TODO check if pause state is active, don't timeout the motors on a pause.
    #TODO check if pause state acive and if not turn the bed off unless we set a preheat
    {% if printer.save_variables.variables.idle_gantry_power == 0 %}
       {action_respond_info("Timeout, Extruder Heater Disabled")}
      M84
    {% elif  printer.save_variables.variables.idle_gantry_power == 1 %}
      #TODO i mean this works, but...
      #M84 X Y E # only works if extended M84 enabled
    {% endif %}
    _SHUTDOWN_IF_SET
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

####
# Improved M84 turns of individual axis.
# 
# Will work for upto 4 Z steppers automaticly. Intended for use with idle_timeout.cfg
# 
###
[gcode_macro M84]
description: Can disable a subset of steppers, M84 X Y E leaves Z enabled. M84 XY (no spaces) is invalid and disables all steppers.
rename_existing: M84.1
gcode:
    {% if 'X' in params %}
        {action_respond_info("Stepper X turned off")}
        SET_STEPPER_ENABLE stepper=stepper_x enable=0
    {% endif %}

    {% if 'Y' in params %}
      {action_respond_info("Stepper Y turned off")}
      SET_STEPPER_ENABLE stepper=stepper_y enable=0
    {% endif %}

    {% if 'E' in params %}
      {action_respond_info("Extruder turned off")}
      SET_STEPPER_ENABLE stepper=extruder enable=0
    {% endif %}

    {% if 'Z' in params %}
      SET_STEPPER_ENABLE stepper=stepper_z enable=0
      {action_respond_info("Stepper Z turned off")}
      {% if printer.configfile.settings.stepper_z1 %}
        {action_respond_info("Stepper Z1 turned off")}
        SET_STEPPER_ENABLE stepper=stepper_z1 enable=0
      {% endif %}
      {% if printer.configfile.settings.stepper_z2 %}
        {action_respond_info("Stepper Z2 turned off")}
        SET_STEPPER_ENABLE stepper=stepper_z2 enable=0
      {% endif %}
      {% if printer.configfile.settings.stepper_z3 %}
        {action_respond_info("Stepper Z3 turned off")}
        SET_STEPPER_ENABLE stepper=stepper_z3 enable=0
      {% endif %}
    {% endif %}

    {% if 'X' not in params and 'Y' not in params and 'E' not in params and 'Z' not in params%}
    {action_respond_info("All steppers turned off")}
    M84.1
    {% endif %}